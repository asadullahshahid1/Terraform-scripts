name: Terraform Provision CI/CD

on:
  push:
    branches:
      - main

jobs:

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.ARM_ACCESS_TOKEN }}
      
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Apply
      run: terraform apply -auto-approve
      
    - name: Get VM Public IP
      id: vm_public_ip
      run: echo "::set-output name=ip::$(terraform output vm_public_ip)"
      
    - name: Connect to VM and Run Ansible
      env:
        VM_PUBLIC_IP: ${{ steps.vm_public_ip.outputs.ip }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key
        ssh-keyscan -H "$VM_PUBLIC_IP" >> ~/.ssh/known_hosts
        ansible-playbook playbook.yml -i "$VM_PUBLIC_IP," --private-key private_key

  destroy:
    name: 'Destroy Infrastructure'
    needs: terraform
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      
    - name: Manual Approval
      uses: trstringer/manual-approval@v1
      
    - name: Terraform Destroy
      if: ${{ success() }}
      run: |
        terraform init
        terraform destroy -auto-approve
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
